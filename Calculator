import java.util.*;


public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();


        String[] parts = input.split(" ");
        String operand1 = parts[0];
        String operator = parts[1];
        String operand2 = parts[2];


        boolean isRoman = isRomanNumeral(operand1) && isRomanNumeral(operand2);


        int num1 = isRoman ? romanToDecimal(operand1) : Integer.parseInt(operand1);
        int num2 = isRoman ? romanToDecimal(operand2) : Integer.parseInt(operand2);


        if (num1 < 1 || num1 > 10 || num2 < 1 || num2 > 10) {
            throw new IllegalArgumentException("Числа должны быть в диапазоне от 1 до 10");
        }

        int result;
        String output;


        switch (operator) {
            case "+":
                result = num1 + num2;
                break;
            case "-":
                result = num1 - num2;
                break;
            case "*":
                result = num1 * num2;
                break;
            case "/":

                if (num2 == 0) {
                    throw new ArithmeticException("Деление на ноль недопустимо");
                }
                result = num1 / num2;
                break;
            default:
                throw new IllegalArgumentException("Неправильный оператор: " + operator);
        }


        output = isRoman ? decimalToRoman(result) : String.valueOf(result);


        System.out.println(output);
    }

    // Проверяет, является ли строка римским числом
    public static boolean isRomanNumeral(String str) {
        return str.matches("^(?i)(M{0,3})(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$");
    }

    // Преобразует римское число в десятичное
    public static int romanToDecimal(String roman) {
        Map<Character, Integer> romanValues = new HashMap<>();
        romanValues.put('I', 1);
        romanValues.put('V', 5);
        romanValues.put('X', 10);
        romanValues.put('L', 50);
        romanValues.put('C', 100);
        romanValues.put('D', 500);
        romanValues.put('M', 1000);

        int result = 0;
        int prevValue = 0;

        for (int i = roman.length() - 1; i >= 0; i--) {
            int curValue = romanValues.get(roman.charAt(i));

            if (curValue < prevValue) {
                result -= curValue;
            } else {
                result += curValue;
                prevValue = curValue;
            }
        }

        return result;
    }


    public static String decimalToRoman(int number) {

        String[] romanSymbols = {"C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        int[] romanValues = {100, 90, 50, 40, 10, 9, 5, 4, 1};

        StringBuilder result = new StringBuilder();

        for (int i = 0; i < romanValues.length; i++) {
            while (number >= romanValues[i]) {
                result.append(romanSymbols[i]);
                number -= romanValues[i];
            }
        }

        return result.toString();
    }
}

